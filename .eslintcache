[{"/Users/ishansengupta/Desktop/real-frontend/rose-parallax/rose-parallax/src/index.js":"1","/Users/ishansengupta/Desktop/real-frontend/rose-parallax/rose-parallax/src/App.js":"2","/Users/ishansengupta/Desktop/real-frontend/rose-parallax/rose-parallax/src/components/Project.js":"3","/Users/ishansengupta/Desktop/real-frontend/rose-parallax/rose-parallax/src/components/Sphere.js":"4","/Users/ishansengupta/Desktop/real-frontend/rose-parallax/rose-parallax/src/components/VisibilitySensor.js":"5"},{"size":199,"mtime":1607538235726,"results":"6","hashOfConfig":"7"},{"size":10731,"mtime":1607561754809,"results":"8","hashOfConfig":"7"},{"size":244,"mtime":1607538348684,"results":"9","hashOfConfig":"10"},{"size":695,"mtime":1607538364440,"results":"11","hashOfConfig":"10"},{"size":738,"mtime":1607549942257,"results":"12","hashOfConfig":"7"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"wx0dvf",{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"mqrrlh",{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ishansengupta/Desktop/real-frontend/rose-parallax/rose-parallax/src/index.js",[],["27","28"],"/Users/ishansengupta/Desktop/real-frontend/rose-parallax/rose-parallax/src/App.js",["29","30","31","32"],"import React, { useState } from \"react\";\nimport { Parallax, ParallaxLayer } from \"react-spring/renderprops-addons\";\nimport \"./styles.css\";\nimport { Spring } from \"react-spring/renderprops\";\nimport VisibilitySensor from \"./components/VisibilitySensor\";\nimport img1 from \"./img/shoe.png\";\nimport img2 from \"./img/shoe1.png\";\nimport img3 from \"./img/shoe-black.png\";\n\nexport default function App() {\n  let parallax;\n  const [expanded, setExpanded] = useState(false);\n  return (\n    <>\n      <div className=\"frame\">\n        <div className=\"frame__title-wrap\">\n          <div className=\"logo\">I.</div>\n        </div>\n        <div className=\"frame__links\">\n          <div className=\"frame__nav\">\n            <div className=\"frame__nav__items\">\n              <button className=\"frame__nav__item\">Shop</button>\n              <button className=\"frame__nav__item\">Resume</button>\n              <button className=\"frame__nav__item\">Help</button>\n              <button className=\"frame__nav__item\">About</button>\n            </div>\n          </div>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 16 16\"\n            width=\"16\"\n            height=\"16\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M1 2.75A.75.75 0 011.75 2h12.5a.75.75 0 110 1.5H1.75A.75.75 0 011 2.75zm0 5A.75.75 0 011.75 7h12.5a.75.75 0 110 1.5H1.75A.75.75 0 011 7.75zM1.75 12a.75.75 0 100 1.5h12.5a.75.75 0 100-1.5H1.75z\"\n            ></path>\n          </svg>\n        </div>\n        <div className=\"frame__demos\">\n          <a\n            href=\"https://isengupt.github.io/simple-visible/\"\n            activeClassName=\"frame__demo--current\"\n            className=\"frame__demo\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 16 16\"\n              width=\"16\"\n              height=\"16\"\n            >\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M7.78 12.53a.75.75 0 01-1.06 0L2.47 8.28a.75.75 0 010-1.06l4.25-4.25a.75.75 0 011.06 1.06L4.81 7h7.44a.75.75 0 010 1.5H4.81l2.97 2.97a.75.75 0 010 1.06z\"\n              ></path>\n            </svg>\n          </a>\n          <a\n            href=\"https://github.com/isengupt/shoe-parallax\"\n            activeClassName=\"frame__demo--current\"\n            className=\"frame__demo\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 16 16\"\n              width=\"16\"\n              height=\"16\"\n            >\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"\n              ></path>\n            </svg>\n          </a>\n          <a\n            href=\"#\"\n            activeClassName=\"frame__demo--current\"\n            className=\"frame__demo\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 16 16\"\n              width=\"16\"\n              height=\"16\"\n            >\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M8 2a.75.75 0 01.75.75v4.5h4.5a.75.75 0 010 1.5h-4.5v4.5a.75.75 0 01-1.5 0v-4.5h-4.5a.75.75 0 010-1.5h4.5v-4.5A.75.75 0 018 2z\"\n              ></path>\n            </svg>\n          </a>\n        </div>\n      </div>\n      <Parallax pages={3} ref={(ref) => (parallax = ref)}>\n        <ParallaxLayer\n          speed={-0.8}\n          factor={2}\n          offset={0}\n          className=\"image__layer\"\n          style={{\n            display: \"grid\",\n\n            gridTemplateColumns: \"1fr 1fr\",\n\n          \n          }}\n          onClick={() => parallax.scrollTo(1)}\n        >\n          <Spring\n            delay={200}\n            className=\"shoe__container\"\n            to={{\n              width: expanded ? \"700px\" : \"500px\",\n              transform: expanded ? \"rotateZ(0deg)\" : \"rotateZ(-35deg)\",\n            }}\n          >\n            {(props) => (\n              <img style={{ ...props }} className=\"shoe__picture\" src={img1} />\n            )}\n          </Spring>\n          <div></div>\n        </ParallaxLayer>\n\n        <ParallaxLayer offset={2} speed={1.6}>\n     \n      </ParallaxLayer>\n     \n\n        <ParallaxLayer\n          offset={0}\n          speed={0.2}\n          onClick={() => parallax.scrollTo(1)}\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <VisibilitySensor partialVisibility>\n            {({ isVisible }) => (\n              <Spring\n                delay={200}\n                to={{\n                  opacity: isVisible ? 1 : 0,\n                  transform: isVisible ? \"translateY(0)\" : \"translateY(80px)\",\n                }}\n              >\n                {(props) => (\n                  <div style={{ ...props }} className=\"title__container\">\n                    <div className=\"title__text\">\n                      <h1 className=\"title\">Nike</h1>\n                      <h1 className=\"title\">Fragility</h1>\n                    </div>\n                  </div>\n                )}\n              </Spring>\n            )}\n          </VisibilitySensor>\n        </ParallaxLayer>\n        <ParallaxLayer offset={0} speed={1.8}>\n     \n     <img src={img2} \n      style={{ marginLeft: \"60em\", marginTop: \"20em\", textAlign: \"right\" }}\n     className=\"floating__img\"/>\n     </ParallaxLayer>\n\n        <ParallaxLayer\n          factor={1}\n          offset={1}\n          speed={-2.5}\n          onClick={() => parallax.scrollTo(2)}\n        >\n          <div className=\"paragraph__container\">\n            <div></div>\n\n            <VisibilitySensor partialVisibility>\n              {({ isVisible }) => (\n                <Spring\n                  delay={0}\n                  to={{\n                    opacity: isVisible ? 1 : 0,\n                    transform: isVisible ? \"translateY(0)\" : \"translateY(80px)\",\n                  }}\n                >\n                  {(props) => (\n                    <div style={{ ...props }} className=\"paragraph__text\">\n                      <div className=\"paragraph__title\">\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit\n                      </div>\n                      <div className=\"paragraph__description\">\n                        Rorem ipsum dolor sit amet, consectetur adipiscing elit,\n                        sed do eiusmod tempor incididunt ut labore et dolore\n                        magna aliqua. Ut enim ad minim veniam, quis nostrud\n                        exercitation ullamco laboris nisi ut aliquip ex ea\n                        commodo consequat. Duis aute irure dolor in\n                        reprehenderit in voluptate velit esse cillum dolore eu\n                        fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n                        non proident, sunt in culpa qui officia deserunt mollit\n                        anim id est laborum Rorem ipsum dolor sit amet,\n                        consectetur adipiscing elit, sed do eiusmod tempor\n                        incididunt ut labore et dolore magna aliqua. Ut enim ad\n                        minim veniam, quis nostrud exercitation ullamco laboris\n                        nisi ut aliquip ex ea commodo consequat. Duis aute irure\n                        dolor in reprehenderit in voluptate velit esse cillum\n                        dolore eu fugiat nulla pariatur. Excepteur sint occaecat\n                        cupidatat non proident, sunt in culpa qui officia\n                        deserunt mollit anim id est laborum\n                      </div>\n                    </div>\n                  )}\n                </Spring>\n              )}\n            </VisibilitySensor>\n          </div>\n        </ParallaxLayer>\n        <ParallaxLayer offset={1} speed={-0.2} >\n     \n     <img src={img3} \n      style={{ marginLeft: \"70em\", marginTop: \"20em\", textAlign: \"right\", transform: 'rotate(-45deg)' }}\n     className=\"floating__img\"/>\n     </ParallaxLayer>\n        <ParallaxLayer\n          onClick={() => parallax.scrollTo(0)}\n          offset={2}\n          speed={4}\n          factor={1}\n        >\n          <div className=\"price__page\">\n            <div></div>\n\n            <VisibilitySensor\n              partialVisibility\n              onChange={() => setExpanded(!expanded)}\n            >\n              {({ isVisible }) => (\n                <Spring\n                  delay={200}\n                  to={{\n                    opacity: isVisible ? 1 : 0,\n                    transform: isVisible ? \"translateY(0)\" : \"translateY(80px)\",\n                  }}\n                >\n                  {(props) => (\n                    <div className=\"price__container\" style={{ ...props }}>\n                      <div className=\"price__title__container\">\n                        <div className=\"price__title\">\n                          Classic Nike Fragilities\n                        </div>\n                        <div className=\"price__color\">Red</div>\n                        <div className=\"price__dollar\">$ 57.00</div>\n                        <div className=\"price__description\">\n                          fugiat nulla pariatur. Excepteur sint occaecat\n                          cupidatat non proident, sunt in culpa qui officia\n                          deserunt mollit anim id est laborum\n                        </div>\n                        <div className=\"price__cart\">View Cart</div>\n                      </div>\n                      <div className=\"price__info__container\">\n                        <select placeholder=\"Select size\" id=\"size\" name=\"size\">\n                          <option value=\"9\">9</option>\n                          <option value=\"10\">10</option>\n                          <option value=\"10.5\">10.5</option>\n                          <option value=\"11\">11</option>\n                        </select>\n\n                        <button className=\"price__info__button\">\n                          Add to bag\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </Spring>\n              )}\n            </VisibilitySensor>\n          </div>\n        </ParallaxLayer>\n      </Parallax>\n    </>\n  );\n}\n","/Users/ishansengupta/Desktop/real-frontend/rose-parallax/rose-parallax/src/components/Project.js",[],["33","34"],"/Users/ishansengupta/Desktop/real-frontend/rose-parallax/rose-parallax/src/components/Sphere.js",["35","36"],"import React, { useRef, useState } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\n\nconst Sphere = ({ constructorArgs, position, wireframe }) => {\n  const mesh = useRef();\n  // radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength }\n  // const sphereArgs = [1, 8, 6, 0, Math.PI * 2, 0, Math.PI * 2];\n  const [hovered, setHover] = useState(false);\n  useFrame(() => (mesh.current.rotation.y += 0.01));\n\n  return (\n    <mesh ref={mesh} position={position} visible>\n      <sphereBufferGeometry attach=\"geometry\" args={constructorArgs} />\n      <meshStandardMaterial attach=\"material\" color=\"darkblue\" wireframe />\n    </mesh>\n  );\n};\n\nexport default Sphere;","/Users/ishansengupta/Desktop/real-frontend/rose-parallax/rose-parallax/src/components/VisibilitySensor.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":75,"column":11,"nodeType":"43","endLine":79,"endColumn":12},{"ruleId":"44","severity":1,"message":"45","line":118,"column":15,"nodeType":"43","endLine":118,"endColumn":80},{"ruleId":"44","severity":1,"message":"45","line":162,"column":6,"nodeType":"43","endLine":164,"endColumn":33},{"ruleId":"44","severity":1,"message":"45","line":218,"column":6,"nodeType":"43","endLine":220,"endColumn":33},{"ruleId":"37","replacedBy":"46"},{"ruleId":"39","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":8,"column":10,"nodeType":"50","messageId":"51","endLine":8,"endColumn":17},{"ruleId":"48","severity":1,"message":"52","line":8,"column":19,"nodeType":"50","messageId":"51","endLine":8,"endColumn":27},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["53"],["54"],"no-unused-vars","'hovered' is assigned a value but never used.","Identifier","unusedVar","'setHover' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]